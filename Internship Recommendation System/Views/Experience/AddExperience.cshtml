@model Internship_Recommendation_System.ViewModels.IntExpViewModel

@{
    ViewBag.Title = "Add Experience";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/Content/slider-style.css">

<div class="col-lg-12">

    <div class="card">
        <div class="card-body">
            <h5 class="card-title text-center">Experience Form</h5>

            <!-- Add Experience Form -->
            <form id="intexpForm" class="row g-3 needs-validation" novalidate>
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div id="formSection" style="display: block">
                    <div class="row mb-3">
                        @Html.LabelFor(model => model.CompanyID_FK, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.DropDownListFor(model => model.CompanyID_FK, null, "Select", htmlAttributes: new { @class = "form-select", required = "required" })
                            @Html.ValidationMessageFor(model => model.CompanyID_FK, "", new { @class = "text-danger small d-block text-center" })
                        </div>
                    </div>
                    <div class="row mb-3">
                        @Html.LabelFor(model => model.JobID_FK, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.DropDownListFor(model => model.JobID_FK, null, "Select", htmlAttributes: new { @class = "form-select", required = "required" })
                            @Html.ValidationMessageFor(model => model.JobID_FK, "", new { @class = "text-danger small d-block text-center" })
                        </div>
                    </div>
                    <div class="row mb-3">
                        @Html.LabelFor(model => model.YearStarted, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.YearStarted, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.YearStarted, "", new { @class = "text-danger small d-block text-center" })
                        </div>
                    </div>
                    <div class="row mb-3">
                        @Html.LabelFor(model => model.UniversityYear_FK, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.DropDownListFor(model => model.UniversityYear_FK, null, "Select", htmlAttributes: new { @class = "form-select", required = "required" })
                            @Html.ValidationMessageFor(model => model.UniversityYear_FK, "", new { @class = "text-danger small d-block text-center" })
                        </div>
                    </div>
                    <div class="row mb-3">
                        @Html.LabelFor(model => model.InternshipPeriod, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.DropDownListFor(model => model.InternshipPeriod, null, "Select", htmlAttributes: new { @class = "form-select", required = "required" })                            
                            @Html.ValidationMessageFor(model => model.InternshipPeriod, "", new { @class = "text-danger small d-block text-center" })
                        </div>
                    </div>
                    <div class="row mb-3">
                        @Html.LabelFor(model => model.IsCompleted, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.IsCompleted, new { htmlAttributes = new { @class = "form-check-input" } })
                            @Html.ValidationMessageFor(model => model.IsCompleted, "", new { @class = "text-danger small d-block text-center" })
                        </div>
                    </div>
                    <div class="row mb-3">
                        @Html.LabelFor(model => model.AcceptanceLetter, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.AcceptanceLetter, new { @class = "form-control", @type = "file", @accept = ".pdf", @required = "required" })
                            @Html.ValidationMessageFor(model => model.AcceptanceLetter, "", new { @class = "text-danger small d-block text-center" })
                        </div>
                    </div>
                    <div class="row mb-3">
                        @Html.LabelFor(model => model.ServiceLetter, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.TextBoxFor(model => model.ServiceLetter, new { @class = "form-control", @type = "file", @accept = ".pdf" })
                            @Html.ValidationMessageFor(model => model.ServiceLetter, "", new { @class = "text-danger small d-block text-center" })
                        </div>
                    </div>
                    <div class="row mb-3 justify-content-center">
                        <button type="button" class="btn btn-secondary w-50" onclick="formSectionController()">Next</button>
                    </div>
                </div>

                <hr />

                <div id="sliderSection" style="display: none">
                    <div class="row mb-3">
                        <div class="col">
                            <div class="text-center">
                                @Html.LabelFor(model => model.Parameter1, htmlAttributes: new { @class = "col-form-label fw-bold" })
                            </div>
                            <div>
                                <div id="parameter1val" class="d-flex justify-content-center text-success fw-bold"></div>
                                <div id="expParaSlider1"></div>
                                @Html.EditorFor(model => model.Parameter1, new { htmlAttributes = new { @class = "form-control", required = "required", @style = "visibility:hidden;" } })
                                @Html.ValidationMessageFor(model => model.Parameter1, "", new { @class = "text-danger small d-block text-center" })
                            </div>
                        </div>
                        <div class="col">
                            <div class="text-center">
                                @Html.LabelFor(model => model.Parameter2, htmlAttributes: new { @class = "col-form-label fw-bold" })
                            </div>
                            <div>
                                <div id="parameter2val" class="d-flex justify-content-center text-success fw-bold"></div>
                                <div id="expParaSlider2"></div>
                                @Html.EditorFor(model => model.Parameter2, new { htmlAttributes = new { @class = "form-control", required = "required", @style = "visibility:hidden;" } })
                                @Html.ValidationMessageFor(model => model.Parameter2, "", new { @class = "text-danger small d-block text-center" })
                            </div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col">
                            <div class="text-center">
                                @Html.LabelFor(model => model.Parameter3, htmlAttributes: new { @class = "col-form-label fw-bold" })
                            </div>
                            <div>
                                <div id="parameter3val" class="d-flex justify-content-center text-success fw-bold"></div>
                                <div id="expParaSlider3"></div>
                                @Html.EditorFor(model => model.Parameter3, new { htmlAttributes = new { @class = "form-control", required = "required", @style = "visibility:hidden;" } })
                                @Html.ValidationMessageFor(model => model.Parameter3, "", new { @class = "text-danger small d-block text-center" })
                            </div>
                        </div>
                        <div class="col">
                            <div class="text-center">
                                @Html.LabelFor(model => model.Parameter4, htmlAttributes: new { @class = "col-form-label fw-bold" })
                            </div>
                            <div>
                                <div id="parameter4val" class="d-flex justify-content-center text-success fw-bold"></div>
                                <div id="expParaSlider4"></div>
                                @Html.EditorFor(model => model.Parameter4, new { htmlAttributes = new { @class = "form-control", required = "required", @style = "visibility:hidden;" } })
                                @Html.ValidationMessageFor(model => model.Parameter4, "", new { @class = "text-danger small d-block text-center" })
                            </div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col">
                            <div class="text-center">
                                @Html.LabelFor(model => model.Parameter5, htmlAttributes: new { @class = "col-form-label fw-bold" })
                            </div>
                            <div>
                                <div id="parameter5val" class="d-flex justify-content-center text-success fw-bold"></div>
                                <div id="expParaSlider5"></div>
                                @Html.EditorFor(model => model.Parameter5, new { htmlAttributes = new { @class = "form-control", required = "required", @style = "visibility:hidden;" } })
                                @Html.ValidationMessageFor(model => model.Parameter5, "", new { @class = "text-danger small d-block text-center" })
                            </div>
                        </div>
                        <div class="col">
                            <div class="text-center">
                                @Html.LabelFor(model => model.Parameter6, htmlAttributes: new { @class = "col-form-label fw-bold" })
                            </div>
                            <div>
                                <div id="parameter6val" class="d-flex justify-content-center text-success fw-bold"></div>
                                <div id="expParaSlider6"></div>
                                @Html.EditorFor(model => model.Parameter6, new { htmlAttributes = new { @class = "form-control", required = "required", @style = "visibility:hidden;" } })
                                @Html.ValidationMessageFor(model => model.Parameter6, "", new { @class = "text-danger small d-block text-center" })
                            </div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col">
                            <div class="text-center">
                                @Html.LabelFor(model => model.Parameter7, htmlAttributes: new { @class = "col-form-label fw-bold" })
                            </div>
                            <div>
                                <div id="parameter7val" class="d-flex justify-content-center text-success fw-bold"></div>
                                <div id="expParaSlider7"></div>
                                @Html.EditorFor(model => model.Parameter7, new { htmlAttributes = new { @class = "form-control", required = "required", @style = "visibility:hidden;" } })
                                @Html.ValidationMessageFor(model => model.Parameter7, "", new { @class = "text-danger small d-block text-center" })
                            </div>
                        </div>
                        <div class="col">
                            <div class="text-center">
                                @Html.LabelFor(model => model.Parameter8, htmlAttributes: new { @class = "col-form-label fw-bold" })
                            </div>
                            <div>
                                <div id="parameter8val" class="d-flex justify-content-center text-success fw-bold"></div>
                                <div id="expParaSlider8"></div>
                                @Html.EditorFor(model => model.Parameter8, new { htmlAttributes = new { @class = "form-control", required = "required", @style = "visibility:hidden;" } })
                                @Html.ValidationMessageFor(model => model.Parameter8, "", new { @class = "text-danger small d-block text-center" })
                            </div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col">
                            <div class="text-center">
                                @Html.LabelFor(model => model.Parameter9, htmlAttributes: new { @class = "col-form-label fw-bold" })
                            </div>
                            <div>
                                <div id="parameter9val" class="d-flex justify-content-center text-success fw-bold"></div>
                                <div id="expParaSlider9"></div>
                                @Html.EditorFor(model => model.Parameter9, new { htmlAttributes = new { @class = "form-control", required = "required", @style = "visibility:hidden;" } })
                                @Html.ValidationMessageFor(model => model.Parameter9, "", new { @class = "text-danger small d-block text-center" })
                            </div>
                        </div>
                        <div class="col">
                            <div class="text-center">
                                @Html.LabelFor(model => model.Parameter10, htmlAttributes: new { @class = "col-form-label fw-bold" })
                            </div>
                            <div>
                                <div id="parameter10val" class="d-flex justify-content-center text-success fw-bold"></div>
                                <div id="expParaSlider10"></div>
                                @Html.EditorFor(model => model.Parameter10, new { htmlAttributes = new { @class = "form-control", required = "required", @style = "visibility:hidden;" } })
                                @Html.ValidationMessageFor(model => model.Parameter10, "", new { @class = "text-danger small d-block text-center" })
                            </div>
                        </div>
                    </div>
                    <div class="row mb-3 justify-content-center">
                        <button type="button" class="btn btn-secondary w-50" onclick="formSectionController()">Go Back...</button>
                    </div>

                    <div class="row mb-3 justify-content-center">
                        <input id="expSubBtn" type="submit" class="btn btn-primary w-50" value="Submit Form">
                    </div>
                </div>
            </form>
            <!-- End General Form Elements -->
        </div>
    </div>
</div>

<!-- Vertically centered Modal -->
<div class="modal fade" id="expModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-primary"><i class="bi bi-info-circle-fill g-5"></i>&nbsp;Information</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="expModal-modal-body">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!-- End Vertically centered Modal-->

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/ViewScripts/Slider.js"></script>
    <script src="~/ViewScripts/Experience.js"></script>
}