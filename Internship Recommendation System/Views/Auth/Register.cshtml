@model Internship_Recommendation_System.ViewModels.RegisterViewModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">

    <title>Register - Internship Recommendation Syste</title>
    <meta content="" name="description">
    <meta content="" name="keywords">

    <!-- Favicons -->
    <link href="~/Images/favicon.png" rel="icon">
    <link href="~/Images/apple-touch-icon.png" rel="apple-touch-icon">

    <!-- Google Fonts -->
    <link href="https://fonts.gstatic.com" rel="preconnect">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>

<body>

    <main>
        <div class="container">

            <section class="section register min-vh-100 d-flex flex-column align-items-center justify-content-center py-4">
                <div class="container">
                    <div class="row justify-content-center">
                        <div class="col-lg-7 col-md-6 d-flex flex-column align-items-center justify-content-center">

                            <div class="d-flex justify-content-center py-4">
                                <a href="~/Home/Index" class="logo d-flex align-items-center w-auto">
                                    <img src="~/Images/logo.png" alt="IRS">
                                    <span class="d-none d-lg-block">Internship Recommendation System</span>
                                </a>
                            </div><!-- End Logo -->

                            <div class="card mb-3">

                                <div class="card-body">

                                    <div class="pt-4 pb-2">
                                        <h5 class="card-title text-center pb-0 fs-4">Create an Account</h5>
                                        <p class="text-center small">Enter your personal details to create account</p>
                                    </div>

                                    <div class="row g-3">
                                        <div class="col text-center">
                                            <input type="radio" name="formSelector" id="studentFormSelector" value="studentForm" checked="checked" />
                                            <label for="studentFormSelector">Student</label>
                                        </div>
                                        <div class="col text-center">
                                            <input type="radio" name="formSelector" id="cgunitFormSelector" value="cgunitForm" />
                                            <label for="cgunitFormSelector">Career Guidance Unit</label>
                                        </div>
                                    </div>

                                    <form id="studentRegisterForm" class="row g-3 needs-validation" novalidate oninput='StuConfirmPassword.setCustomValidity(StuConfirmPassword.value != StuPassword.value ? "Passwords do not match." : "")'>
                                        @Html.AntiForgeryToken()
                                        <hr />
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        <div class="row">
                                            <div class="col-md">
                                                <div class="col-12">
                                                    @Html.LabelFor(model => model.IndexNo, htmlAttributes: new { @class = "form-label" })
                                                    @Html.EditorFor(model => model.IndexNo, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                    @Html.ValidationMessageFor(model => model.IndexNo, "", new { @class = "text-danger small d-block text-center" })
                                                </div>

                                                <div class="col-12">
                                                    @Html.LabelFor(model => model.StuFirstName, htmlAttributes: new { @class = "form-label" })
                                                    @Html.EditorFor(model => model.StuFirstName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                    @Html.ValidationMessageFor(model => model.StuFirstName, "", new { @class = "text-danger small d-block text-center" })
                                                </div>

                                                <div class="col-12">
                                                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "form-label" })
                                                    <div class="text-center">
                                                        <label for="male">Male</label>
                                                        @Html.RadioButtonFor(model => model.Gender, "Male", new { @id = "male" })
                                                        <span class="d-inline-block"></span>
                                                        <label for="female">Female</label>
                                                        @Html.RadioButtonFor(model => model.Gender, "Female", new { @id = "female" })
                                                    </div>                                                    
                                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger small d-block text-center" })
                                                </div>
                                            </div>
                                            <div class="col-md">
                                                <div class="col-12">
                                                    @Html.LabelFor(model => model.StuUniversityID, htmlAttributes: new { @class = "form-label" })
                                                    @Html.DropDownListFor(model => model.StuUniversityID, null, "Select", htmlAttributes: new { @class = "form-select", @title = "University", required = "required" })
                                                    @Html.ValidationMessageFor(model => model.StuUniversityID, "", new { @class = "text-danger small d-block text-center" })         
                                                </div>

                                                <div class="col-12">
                                                    @Html.LabelFor(model => model.StuLastName, htmlAttributes: new { @class = "form-label" })
                                                    @Html.EditorFor(model => model.StuLastName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                    @Html.ValidationMessageFor(model => model.StuLastName, "", new { @class = "text-danger small d-block text-center" })
                                                </div>
                                                <div class="col-12">
                                                    @Html.LabelFor(model => model.DateofBirth, htmlAttributes: new { @class = "form-label" })
                                                    @Html.EditorFor(model => model.DateofBirth, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                    @Html.ValidationMessageFor(model => model.DateofBirth, "", new { @class = "text-danger small d-block text-center" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-12">
                                                @Html.LabelFor(model => model.DegreeID, htmlAttributes: new { @class = "form-label" })
                                                @Html.DropDownListFor(model => model.DegreeID, null, "Select", htmlAttributes: new { @class = "form-select", @title = "Degree", required = "required" })
                                                @Html.ValidationMessageFor(model => model.DegreeID, "", new { @class = "text-danger small d-block text-center" })
                                            </div>

                                            <div class="col-12">
                                                @Html.LabelFor(model => model.StuEmail, htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.StuEmail, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                @Html.ValidationMessageFor(model => model.StuEmail, "", new { @class = "text-danger small d-block text-center" })
                                            </div>

                                            <div class="col-12">
                                                @Html.LabelFor(model => model.StuPassword, htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.StuPassword, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                @Html.ValidationMessageFor(model => model.StuPassword, "", new { @class = "text-danger small d-block text-center" })
                                            </div>

                                            <div class="col-12">
                                                @Html.LabelFor(model => model.StuConfirmPassword, htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.StuConfirmPassword, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                @Html.ValidationMessageFor(model => model.StuConfirmPassword, "", new { @class = "text-danger small d-block text-center" })
                                            </div>
                                        </div>

                                        <div class="row gy-3">
                                            <div class="col-12">
                                                <input id="stdRegBtn" class="btn btn-primary w-100" type="submit" value="Create Account">
                                            </div>

                                            <div class="col-12">
                                                <p class="small mb-0">Already have an account? <a href="~/Auth/Login">Log in</a></p>
                                            </div>
                                        </div>

                                    </form>

                                    <form id="cgunitRegisterForm" class="row g-3 needs-validation" novalidate oninput='CguConfirmPassword.setCustomValidity(CguConfirmPassword.value != CguPassword.value ? "Passwords do not match." : "")'>
                                        @Html.AntiForgeryToken()
                                        <hr />
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        <div class="col">
                                            <div class="col-12">
                                                @Html.LabelFor(model => model.CguFirstName, htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.CguFirstName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                @Html.ValidationMessageFor(model => model.CguFirstName, "", new { @class = "text-danger small d-block text-center" })
                                            </div>
                                            <div class="col-12">
                                                @Html.LabelFor(model => model.CguEmail, htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.CguEmail, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                @Html.ValidationMessageFor(model => model.CguEmail, "", new { @class = "text-danger small d-block text-center" })
                                            </div>
                                        </div>

                                        <div class="col">
                                            <div class="col-12">
                                                @Html.LabelFor(model => model.CguLastName, htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.CguLastName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                @Html.ValidationMessageFor(model => model.CguLastName, "", new { @class = "text-danger small d-block text-center" })
                                            </div>
                                            <div class="col-12">
                                                @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "form-label" })
                                                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                                @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger small d-block text-center" })
                                            </div>

                                        </div>



                                        <div class="col-12">
                                            @Html.LabelFor(model => model.CguUniversityID, htmlAttributes: new { @class = "form-label" })
                                            @Html.DropDownListFor(model => model.CguUniversityID, null, "Select", htmlAttributes: new { @class = "form-select", @title = "University", required = "required" })
                                            @Html.ValidationMessageFor(model => model.CguUniversityID, "", new { @class = "text-danger small d-block text-center" })
                                        </div>

                                        <div class="col-12">
                                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "form-label" })
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger small d-block text-center" })
                                        </div>



                                        <div class="col-12">
                                            @Html.LabelFor(model => model.CguPassword, htmlAttributes: new { @class = "form-label" })
                                            @Html.EditorFor(model => model.CguPassword, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                            @Html.ValidationMessageFor(model => model.CguPassword, "", new { @class = "text-danger small d-block text-center" })
                                        </div>

                                        <div class="col-12">
                                            @Html.LabelFor(model => model.CguConfirmPassword, htmlAttributes: new { @class = "form-label" })
                                            @Html.EditorFor(model => model.CguConfirmPassword, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                            @Html.ValidationMessageFor(model => model.CguConfirmPassword, "", new { @class = "text-danger small d-block text-center" })
                                        </div>

                                        <div class="col-12">
                                            <input id="cguRegBtn" class="btn btn-primary w-100" type="submit" value="Create Account">
                                        </div>

                                        <div class="col-12">
                                            <p class="small mb-0">Already have an account? <a href="~/Auth/Login">Log in</a></p>
                                        </div>

                                    </form>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

            </section>

        </div>
    </main><!-- End #main -->

    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>

    <!-- Vertically centered Modal -->
    <div class="modal fade" id="registerModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-primary"><i class="bi bi-info-circle-fill g-5"></i>&nbsp;Information</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="registerModal-modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <!-- End Vertically centered Modal-->

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Content/js")
    <script src="~/ViewScripts/Auth.js"></script>
</body>
</html>